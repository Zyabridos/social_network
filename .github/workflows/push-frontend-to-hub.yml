name: Push frontend to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create backend .env.docker
      run: |
        mkdir -p backend
        cat <<EOF > backend/.env.docker
        POSTGRES_USER=${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB=${{ secrets.POSTGRES_DB }}
        POSTGRES_HOST=db
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        SESSION_SECRET=${{ secrets.SESSION_SECRET }}
        EOF

    - name: Create frontend .env.docker
      run: |
        mkdir -p frontend
        cat <<EOF > frontend/.env.docker
        NEXT_PUBLIC_APP_ENV=production
        NEXT_PUBLIC_API_URL=http://backend:5001/api
        NEXT_PUBLIC_API_BASE=http://backend:5001
        EOF

    - name: Debug .frontend/.env.docker
      run: cat frontend/.env.docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend image
      run: make docker-build-back

    - name: Build frontend image (with API build args)
      run: |
        docker build \
          -t social-network-frontend \
          -f frontend/Dockerfile.production \
          --build-arg NEXT_PUBLIC_API_URL=http://backend:5001/api \
          --build-arg NEXT_PUBLIC_API_BASE=http://backend:5001 \
          frontend

    - name: Run containers
      run: make docker-run

    - name: Run DB migrations
      run: docker exec -e NODE_ENV=docker social_network-backend-1 node -r dotenv/config dist/scripts/migrate.js

    - name: Seed the database
      run: docker exec -e NODE_ENV=docker social_network-backend-1 node -r dotenv/config dist/scripts/seed.js

    - name: Debug API availability
      run: docker exec social_network-frontend-1 curl -i http://backend:5001/api/posts

    - name: Wait for frontend to be ready from within container
      run: |
        docker exec social_network-frontend-1 bash -c 'until curl -sSf http://localhost:3000 > /dev/null; do sleep 1; done'

    - name: Run Playwright tests (inside frontend container)
      run: docker exec -e CI=true -e PLAYWRIGHT_BASE_URL=http://localhost:3000 social_network-frontend-1 npx playwright test
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        file: ./frontend/Dockerfile.production
        tags: zyabridos/social_network_frontend:latest